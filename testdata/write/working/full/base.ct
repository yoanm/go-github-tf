$ cd testdata
$ github-tf -v --no-ansi
Info | Found: 1 repos / 0 repo templates / 0 branch templates / 0 branch protection templates

$ cd terraform
$ cat repo.repo1.tf
resource "github_repository" "repo1" {
  name = "repo1"

  visibility  = "visibility"
  description = "a description"

  template {
    owner      = "owner"
    repository = "repository"
  }

  topics       = ["topic1", "topic2"]
  homepage_url = "http://localhost"

  pages {
    source {
      branch = "branch"
      path   = "path"
    }
  }

  has_issues    = false
  has_projects  = true
  has_wiki      = true
  has_downloads = true

  allow_merge_commit     = false
  allow_rebase_merge     = false
  allow_squash_merge     = false
  allow_auto_merge       = false
  delete_branch_on_merge = false

  merge_commit_title          = "aMergeCommitTitle"
  merge_commit_message        = "aMergeCommitMessage"
  squash_merge_commit_title   = "aSquashMergeCommitTitle"
  squash_merge_commit_message = "aSquashMergeCommitMessage"

  vulnerability_alerts = true

  archived           = true
  archive_on_destroy = false
}

resource "github_branch_default" "repo1" {
  repository = github_repository.repo1.name
  branch     = "master"
}

resource "github_branch_protection" "repo1-master" {
  repository_id           = github_repository.repo1.node_id
  pattern                 = "master"
  enforce_admins          = true
  allows_deletions        = true
  allows_force_pushes     = true
  push_restrictions       = ["pushRestriction"]
  required_linear_history = true
  require_signed_commits  = true

  required_status_checks {
    strict   = true
    contexts = ["context1"]
  }

  required_pull_request_reviews {
    dismiss_stale_reviews           = true
    restrict_dismissals             = true
    dismissal_restrictions          = ["dismissalRestriction"]
    require_code_owner_reviews      = true
    required_approving_review_count = 1
  }
}
